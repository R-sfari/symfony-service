$(window).on("load", function() {
  // page onload functions
  profile_cv_index.color_update();
});
var a = UIkit.modal("#modal", {
  center: !0,
  bgclose: 0,
  modal: 0,
  keyboard: !0
});

$('#modal').on({
  'hide.uk.modal': function() {
    console.log("Element is not visible.");
    $('#modal_content').empty().append('<div class="uk-modal-spinner"></div>');
  }
});

$(document).on('click', '.uk-href', function(event) {
  event.preventDefault();
  var $this = this;
  // modal now displays the appropriate positions.
  $.ajax({
    url: $($this).attr('href'),
    type: 'GET',
    cache: false,
    timeout: 3000,
    success: function(data) {
      // Replace current modal ...
      // ... with the returned one from the AJAX response.
      $('#modal_content').empty().append(data);
      // reinitialize checkboxes
      altair_md.checkbox_radio($('#modal_content'));
      // reinitialize table
      profile_cv_index.table_check();
    },
    error: function(XMLHttpRequest, textStatus, errorThrown) {
      new UIkit.notify({
        message: "<a href='#' class='notify-action'><span class='uk-icon-times'></span></a>" + textStatus,
        status: "error",
        timeout: 5000,
        group: null,
        pos: 'top-right',
      });
    }
  });
});

$(document).on('click', '.modal', function(event) {
  var $this = this;
  // modal now displays the appropriate positions.
  a.isActive() ? a.hide() : a.show();
  $.ajax({
    url: $($this).data('url'),
    type: $($this).data('method'),
    cache: false,
    timeout: 3000,
    success: function(data) {
      // Replace current modal ...
      // ... with the returned one from the AJAX response.
      $('#modal_content').empty().append(data);
      // reinitialize checkboxes
      altair_md.checkbox_radio($('#modal_content'));
      // reinitialize inputs
      altair_md.inputs();
      // reinitialize selectize
      altair_forms.select_elements($('#modal_content'));
      // reinitialize dropify
      profile_cv_dropify.dropify();
      // reinitialize table
      profile_cv_index.table_check();
      // reinitialize rangeSlider
      profile_cv_index.rangeSlider();
    },
    error: function(XMLHttpRequest, textStatus, errorThrown) {
      new UIkit.notify({
        message: "<a href='#' class='notify-action'><span class='uk-icon-times'></span></a>" + textStatus,
        status: "error",
        timeout: 5000,
        group: null,
        pos: 'top-right',
      });
    }
  });
});

$(document).on('click', '.delete-modal', function(event) {
  var $this = this;
  UIkit.modal.confirm($($this).data('msg'), function() {
    $.ajax({
      url: $($this).data('url'),
      type: $($this).data('method'),
      cache: false,
      success: function(data) {
        // page onload functions
        new UIkit.notify({
          message: "<a href='#' class='notify-action'><span class='uk-icon-times'></span></a>" + data.msg,
          status: "error",
          timeout: 5000,
          group: null,
          pos: 'top-right',
        });
        // page onload functions
        profile_cv_index.init();
      },
      error: function(XMLHttpRequest, textStatus, errorThrown) {
        new UIkit.notify({
          message: "<a href='#' class='notify-action'><span class='uk-icon-times'></span></a>" + textStatus,
          status: "error",
          timeout: 5000,
          group: null,
          pos: 'top-right',
        });
      }
    });
  });
});

// $(document).on('submit', 'form', function(event) {
//   event.preventDefault();
//
// });

$(document).ajaxForm({
  success: function(data) {
    console.log(jQuery.type(data));
    if (jQuery.type(data) === 'object') {
      new UIkit.notify({
        message: "<a href='#' class='notify-action'><span class='uk-icon-times'></span></a>" + data.msg,
        status: "error",
        timeout: 5000,
        group: null,
        pos: 'top-right',
      });
      // page onload functions
      profile_cv_index.init();
      // hide page
      a.hide();
    } else {
      console.log("if : " + $(this) + this.url + $('body form [name="service_user_profile"]').attr('action'));
      if (!a.isActive()) {
        location.reload();
        altair_helpers.content_preloader_show('md');
        return;
      }

      $('#modal_content').empty().append(data);
      // Replace current modal ...
      // ... with the returned one from the AJAX response.

      // reinitialize checkboxes
      altair_md.checkbox_radio($('#modal_content'));
      // reinitialize dropify
      profile_cv_dropify.dropify();
      // reinitialize rangeSlider
      profile_cv_index.rangeSlider();
      // reinitialize inputs
      altair_md.inputs();
      // reinitialize selectize
      altair_forms.select_elements($('#modal_content'));
    }
  },
  error: function(XMLHttpRequest, textStatus, errorThrown) {
    new UIkit.notify({
      message: "<a href='#' class='notify-action'><span class='uk-icon-times'></span></a>" + textStatus,
      status: "error",
      timeout: 5000,
      group: null,
      pos: 'top-right',
    });
  }
});


// $(document).on('submit', 'form', function(event) {
//   event.preventDefault();
//   // show preloader
//   altair_helpers.content_preloader_show('md');
//   var $form = $(this);
//   // Submit data via AJAX to the form's action path.
//   $.ajax({
//     url: $form.attr('action'),
//     type: $form.attr('method'),
//     data: $form.formToArray(),
//     cache: false,
//     timeout: 3000,
// success: function(data) {
//   console.log(jQuery.type(data));
//   if (jQuery.type(data) === 'object') {
//     new UIkit.notify({
//       message: "<a href='#' class='notify-action'><span class='uk-icon-times'></span></a>" + data.msg,
//       status: "error",
//       timeout: 5000,
//       group: null,
//       pos: 'top-right',
//     });
//     // page onload functions
//     profile_cv_index.init();
//     // hide page
//     a.hide();
//   } else {
//     // Replace current modal ...
//     // ... with the returned one from the AJAX response.
//     $('#modal_content').empty().append(data);
//     // reinitialize checkboxes
//     altair_md.checkbox_radio($('#modal_content'));
//     // reinitialize inputs
//     altair_md.inputs();
//     // reinitialize selectize
//     altair_forms.select_elements($('#modal_content'));
//   }
// },
// error: function(XMLHttpRequest, textStatus, errorThrown) {
//   new UIkit.notify({
//     message: "<a href='#' class='notify-action'><span class='uk-icon-times'></span></a>" + textStatus,
//     status: "error",
//     timeout: 5000,
//     group: null,
//     pos: 'top-right',
//   });
// }
//   });
// });

profile_cv_index = {
  init: function() {
    // show preloader
    altair_helpers.content_preloader_show('md');

    var $elem = $("[data-cv-index],.data-cv-index");
    if ($elem.length) {
      $elem.each(function() {
        var $this = this;
        $.ajax({
          url: $($this).data('url'),
          type: $($this).data('method'),
          cache: false,
          timeout: 3000,
          success: function(data) {
            $($this).empty().append(data);
          },
          error: function(XMLHttpRequest, textStatus, errorThrown) {
            new UIkit.notify({
              message: "<a href='#' class='notify-action'><span class='uk-icon-times'></span></a>" + textStatus,
              status: "error",
              timeout: 5000,
              group: null,
              pos: 'top-right',
            });
          }
        });
      });
    }

    altair_page_onload.init();
    altair_helpers.content_preloader_hide();
  },
  table_check: function() {
    $table_check = $('.table_check');
    $table_check.each(function() {
      var $this = $(this),
        $checkAll = $this.find('.check_all'),
        $checkRow = $this.find('.check_row');

      $checkAll
        .on('ifChecked', function() {
          $checkRow.iCheck('check');
        })
        .on('ifUnchecked', function() {
          $checkRow.iCheck('uncheck');
        });

      $checkRow
        .on('ifChecked', function(event) {
          $(event.currentTarget).closest('tr').addClass('row_checked');
        })
        .on('ifUnchecked', function(event) {
          $(event.currentTarget).closest('tr').removeClass('row_checked');
        })
    });
  },
  rangeSlider: function() {
    $(".range_slider").ionRangeSlider({
      min: 10,
      max: 100,
      grid: !0,
    })
  },
  color_update: function() {
    $('[name="right-bar"]').paletteColorPicker({
      position: 'downside',
      // Callback on change value
      onchange_callback: function(clicked_color) {
        console.log(clicked_color);
        clicked_color = clicked_color == '' ? '#1976d2' : clicked_color;
        $('#right-bar').style('background-color', clicked_color, 'important');
        $('.uk-icon-button').each(function() {
          $(this).style('color', clicked_color, 'important');
        });
        $.ajax({
          url: $('[name="right-bar"]').data('url'),
          type: $('[name="right-bar"]').data('method'),
          data: {
            'rightColor': clicked_color,
            'token': $('input[name="left-bar"]').data('token'),
          },
          cache: false,
          success: function(data) {
            // page onload functions
            new UIkit.notify({
              message: "<a href='#' class='notify-action'><span class='uk-icon-times'></span></a>" + data.msg,
              status: "error",
              timeout: 5000,
              group: null,
              pos: 'top-right',
            });
          },
          error: function(XMLHttpRequest, textStatus, errorThrown) {
            new UIkit.notify({
              message: "<a href='#' class='notify-action'><span class='uk-icon-times'></span></a>" + textStatus,
              status: "error",
              timeout: 5000,
              group: null,
              pos: 'top-right',
            });
          }
        });
      }
    });
    $('[name="left-bar"]').paletteColorPicker({
      position: 'downside',
      // Callback on change value
      onchange_callback: function(clicked_color) {
        clicked_color = clicked_color == '' ? '#d32f2f' : clicked_color;
        console.log(clicked_color);
        console.log($('input[name="left-bar"]').data('url'));
        $('#left-bar').style('background-color', clicked_color, 'important');
        $('.uk-progress-bar').each(function() {
          $(this).style('background-color', clicked_color, 'important');
        });
        $.ajax({
          url: $('input[name="left-bar"]').data('url'),
          type: $('input[name="left-bar"]').data('method'),
          data: {
            'leftColor': clicked_color,
            'token': $('input[name="left-bar"]').data('token'),
          },
          cache: false,
          success: function(data) {
            // page onload functions
            new UIkit.notify({
              message: "<a href='#' class='notify-action'><span class='uk-icon-times'></span></a>" + data.msg,
              status: "error",
              timeout: 5000,
              group: null,
              pos: 'top-right',
            });
          },
          error: function(XMLHttpRequest, textStatus, errorThrown) {
            new UIkit.notify({
              message: "<a href='#' class='notify-action'><span class='uk-icon-times'></span></a>" + textStatus,
              status: "error",
              timeout: 5000,
              group: null,
              pos: 'top-right',
            });
          }
        });

      }
    });
  }
};

$(document).on("ifChecked", "[data-switchery]", function() {
  console.log('ifChecked');
  $("#end_period").hide();
});
$(document).on("ifUnchecked", "[data-switchery-size]", function() {
  console.log('ifUnchecked');
  $("#end_period").show();
});
(function($) {
  if ($.fn.style) {
    return;
  }

  // Escape regex chars with \
  var escape = function(text) {
    return text.replace(/[-[\]{}()*+?.,\\^$|#\s]/g, "\\$&");
  };

  // For those who need them (< IE 9), add support for CSS functions
  var isStyleFuncSupported = !!CSSStyleDeclaration.prototype.getPropertyValue;
  if (!isStyleFuncSupported) {
    CSSStyleDeclaration.prototype.getPropertyValue = function(a) {
      return this.getAttribute(a);
    };
    CSSStyleDeclaration.prototype.setProperty = function(styleName, value, priority) {
      this.setAttribute(styleName, value);
      var priority = typeof priority != 'undefined' ? priority : '';
      if (priority != '') {
        // Add priority manually
        var rule = new RegExp(escape(styleName) + '\\s*:\\s*' + escape(value) +
          '(\\s*;)?', 'gmi');
        this.cssText =
          this.cssText.replace(rule, styleName + ': ' + value + ' !' + priority + ';');
      }
    };
    CSSStyleDeclaration.prototype.removeProperty = function(a) {
      return this.removeAttribute(a);
    };
    CSSStyleDeclaration.prototype.getPropertyPriority = function(styleName) {
      var rule = new RegExp(escape(styleName) + '\\s*:\\s*[^\\s]*\\s*!important(\\s*;)?',
        'gmi');
      return rule.test(this.cssText) ? 'important' : '';
    }
  }

  // The style function
  $.fn.style = function(styleName, value, priority) {
    // DOM node
    var node = this.get(0);
    // Ensure we have a DOM node
    if (typeof node == 'undefined') {
      return this;
    }
    // CSSStyleDeclaration
    var style = this.get(0).style;
    // Getter/Setter
    if (typeof styleName != 'undefined') {
      if (typeof value != 'undefined') {
        // Set style property
        priority = typeof priority != 'undefined' ? priority : '';
        style.setProperty(styleName, value, priority);
        return this;
      } else {
        // Get style property
        return style.getPropertyValue(styleName);
      }
    } else {
      // Get CSSStyleDeclaration
      return style;
    }
  };
})(jQuery);
